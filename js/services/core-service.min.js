var dotmin={ready:callback=>{"loading"!=document.readyState?callback():document.addEventListener("DOMContentLoaded",callback)},require:url=>{dotmin.loadScript(url,null)},loadScript:(url,callback)=>{fetch(url).then(data=>data.text()).then(data=>{eval(data),eval(callback)}).catch(error=>{console.error(error)})},initRoute:(url,callback)=>{dotmin.loadScript(url,callback)},initComponent:(url,callback)=>{dotmin.loadScript(url,callback)},loadModel:(name,callback)=>{dotmin.loadScript(app.config.folder_models+name+app.config.suffix_models,callback)},getRoute:()=>{var location=window.location.href.toString(),currentRoute=app.routes.find(c=>c.name===app.config.default_route);return app.routes.forEach(element=>{-1!==location.indexOf(element.path)&&(currentRoute=element)}),currentRoute},getPageName:()=>{var locations=window.location.href.toString().split("/"),name=locations[locations.length-1];return-1!==name.indexOf("?")&&(name=name.split("?")[0]),name},getUrlParameter:name=>{name=name.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var regex,results=new RegExp("[\\?&]"+name+"=([^&#]*)").exec(location.search);return null===results?"":decodeURIComponent(results[1].replace(/\+/g," "))},getViewController:name=>{var n=name.split("-");return name=n[0],n.forEach((element,index)=>{index>0&&(name+=element.charAt(0).toUpperCase()+element.slice(1).toLowerCase())}),name+=app.config.view_controller_object},getViewModel:name=>{var n=name.split("-");return name=n[0],n.forEach((element,index)=>{index>0&&(name+=element.charAt(0).toUpperCase()+element.slice(1).toLowerCase())}),name+=app.config.view_model_object},loadComponent:name=>{var component=app.components.find((function(c){return c.name==name}));fetch("/views/"+component.path+name+".html").then(data=>data.text()).then(data=>{document.querySelector(name).innerHTML=data}).catch(error=>{console.error(error)}),dotmin.loadScript(app.config.folder_views+component.path+name+app.config.suffix_views,dotmin.getViewController(name)+".init()")},on:(id,action,response)=>{let elem;document.querySelector(id).addEventListener(action,response)},off:(id,action,response)=>{let elem;document.querySelector(id).removeEventListener(action,response)}};
//# sourceMappingURL=core-service.min.js.map